steps:

- id: "Copiando .env"
  name: "bash"
  args: ['cp' , '.env.example', '.env']

- id: "Rodando docker-compose"
  name: "gcr.io/$PROJECT_ID/docker-compose"
  args: ['-f', 'docker-compose.cloudbuild.yml', 'up', '-d']

- id: "Rodando docker ps"
  name: "docker"
  args: ['ps']

- id: "Chown in /var/www"
  name: 'docker'
  args: [ 'exec','-u','root','-t','dlh_php_1','chown','-R','www-data:www-data','/var/www' ]

- id: "Verificando existÃªncia do arquivo do composer"
  name: "docker"
  args: ['exec', '-t', 'dlh_php_1', 'ls', '-s', '/usr/bin/composer']

- id: "Rodando composer"
  name: "docker"
  args: ['exec', '-t', 'dlh_php_1', 'composer', 'install']

- id: "Rodando key:generate"
  name: "docker"
  args: ['exec', '-t', 'dlh_php_1', 'php' , '/var/www/html/artisan', 'key:generate']

- id: "Rodando migrations"
  name: "docker"
  args: ['exec', '-t', 'dlh_php_1', 'php' , '/var/www/html/artisan', 'migrate']

- id: "Rodando php unit"
  name: "docker"
  args: ['exec', '-t', 'dlh_php_1', 'php' , '/var/www/html/vendor/bin/phpunit', '-c', '/var/www/html/phpunit.xml']

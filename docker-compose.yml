version: "3.7"

services:

  nginx:
    build:
      context: .docker/
      dockerfile: nginx/Dockerfile
    tty: true
    restart: always
    networks:
      - backend
      - database
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/var/www/html
      - ./.docker/nginx/templates:/etc/nginx/templates
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - PHP_HOST=php
      - PHP_PORT=9000
    depends_on:
      - php
      - database
    command: bash -c "dockerize -wait tcp://database:3306 -wait tcp://php:9000 -timeout 300s -wait-retry-interval 30s"

  php:
    build:
      context: .docker
      dockerfile: php-fpm/Dockerfile
      args:
        APP_ENVIROMENT: ${APP_ENVIROMENT}
    tty: true
    restart: always
    networks:
      - backend
      - database
    ports:
      - 9000
    volumes:
      - ./www:/var/www/html
    environment:
      - DB_HOST=database
      - DB_PORT=3306
      - APP_ENVIROMENT=${APP_ENVIROMENT}
      - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - DB_USERNAME=docker
      - DB_PASSWORD=123
      - REDIS_HOST=''
      - REDIS_PASSWORD=''
      - REDIS_PORT=''

  redis:
    image: redis:6-alpine
    ports:
      - 6379
    networks:
      - backend

  database:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${COMPOSE_PROJECT_NAME}
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_USER: docker
      MYSQL_PASSWORD: 123
    networks:
      - database
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
       test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
       timeout: 20s

networks:
  backend:
    driver: bridge
  database:
    driver: bridge

volumes:
  db_data:
    driver: local
    labels:
      mf.project.name: ${COMPOSE_PROJECT_NAME}